{
  "version": 3,
  "sources": ["../../js/base.js"],
  "sourcesContent": ["function setThemeMeta(color) {\n  let meta = document.querySelector(\"meta[name='theme-color']\");\n  meta.setAttribute(\"content\", color);\n}\n\nfunction setTheme(theme) {\n  localStorage.setItem(\"theme\", theme);\n\n  let current = document.getElementById(\"current-theme\");\n  if (current) {\n    current.remove();\n  }\n\n  let head = document.getElementsByTagName(\"head\")[0];\n  let link = document.createElement(\"link\");\n  link.rel = \"stylesheet\";\n  link.id = \"current-theme\";\n  link.type = \"text/css\";\n  link.href = theme;\n  head.appendChild(link);\n\n  setTimeout(() => {\n    let color = getComputedStyle(document.documentElement).getPropertyValue(\n      \"--mantle\"\n    );\n    localStorage.setItem(\"theme-base\", color);\n    setThemeMeta(color);\n\n    let isLightMode = theme === \"/css/themes/light.css\";\n    console.log(isLightMode, document.getElementById(\"light\"))\n    document.getElementById(\"light\").checked = isLightMode;\n    document.getElementById(\"dark\").checked = !isLightMode;\n  }, 33);\n}\n\nwindow.setTheme = setTheme;\nwindow.setThemeMeta = setTheme;\n\nlet theme = localStorage.getItem(\"theme\") || \"/static/css/themes/dark.css\";\nlet color = localStorage.getItem(\"theme-base\") || \"##141414\";\n\nsetTheme(theme);\nsetThemeMeta(color);\n\n// set theme\nwindow.onload = () => {\n  let selector = document.getElementById(\"theme-select\");\n  selector.value = theme;\n};\n\n// good scroll restore\nif (\"scrollRestoration\" in history) {\n  history.scrollRestoration = \"auto\";\n}\n\n// service worker\nconst registerServiceWorker = async () => {\n  if (\"serviceWorker\" in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.register(\n        \"/service-worker.js\",\n        {\n          scope: \"/\",\n        }\n      );\n\n      if (registration.installing) {\n        console.log(\"Service worker installing\");\n      } else if (registration.waiting) {\n        console.log(\"Service worker installed\");\n      } else if (registration.active) {\n        console.log(\"Service worker active\");\n      }\n\n      // After the initial load, force a service worker update check each time\n      // our web app is hidden and then brought back to the foreground.\n      document.addEventListener(\"visibilitychange\", () => {\n        if (document.visibilityState === \"visible\") {\n          registration.update();\n        }\n      });\n    } catch (error) {\n      console.error(`Registration failed with ${error}`);\n    }\n  }\n};\n\nregisterServiceWorker();\n"],
  "mappings": "MAAA,WAAsB,EAAO,CAE3B,AADW,SAAS,cAAc,0BAA0B,EACvD,aAAa,UAAW,CAAK,CACpC,CAEA,WAAkB,EAAO,CACvB,aAAa,QAAQ,QAAS,CAAK,EAEnC,GAAI,GAAU,SAAS,eAAe,eAAe,EACrD,AAAI,GACF,EAAQ,OAAO,EAGjB,GAAI,GAAO,SAAS,qBAAqB,MAAM,EAAE,GAC7C,EAAO,SAAS,cAAc,MAAM,EACxC,EAAK,IAAM,aACX,EAAK,GAAK,gBACV,EAAK,KAAO,WACZ,EAAK,KAAO,EACZ,EAAK,YAAY,CAAI,EAErB,WAAW,IAAM,CACf,GAAI,GAAQ,iBAAiB,SAAS,eAAe,EAAE,iBACrD,UACF,EACA,aAAa,QAAQ,aAAc,CAAK,EACxC,EAAa,CAAK,EAElB,GAAI,GAAc,IAAU,wBAC5B,QAAQ,IAAI,EAAa,SAAS,eAAe,OAAO,CAAC,EACzD,SAAS,eAAe,OAAO,EAAE,QAAU,EAC3C,SAAS,eAAe,MAAM,EAAE,QAAU,CAAC,CAC7C,EAAG,EAAE,CACP,CAEA,OAAO,SAAW,EAClB,OAAO,aAAe,EAEtB,GAAI,GAAQ,aAAa,QAAQ,OAAO,GAAK,8BACzC,EAAQ,aAAa,QAAQ,YAAY,GAAK,WAElD,EAAS,CAAK,EACd,EAAa,CAAK,EAGlB,OAAO,OAAS,IAAM,CACpB,GAAI,GAAW,SAAS,eAAe,cAAc,EACrD,EAAS,MAAQ,CACnB,EAGA,AAAI,qBAAuB,UACzB,SAAQ,kBAAoB,QAI9B,GAAM,GAAwB,SAAY,CACxC,GAAI,iBAAmB,WACrB,GAAI,CACF,GAAM,GAAe,KAAM,WAAU,cAAc,SACjD,qBACA,CACE,MAAO,GACT,CACF,EAEA,AAAI,EAAa,WACf,QAAQ,IAAI,2BAA2B,EAClC,AAAI,EAAa,QACtB,QAAQ,IAAI,0BAA0B,EAC7B,EAAa,QACtB,QAAQ,IAAI,uBAAuB,EAKrC,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,AAAI,SAAS,kBAAoB,WAC/B,EAAa,OAAO,CAExB,CAAC,CACH,OAAS,EAAP,CACA,QAAQ,MAAM,4BAA4B,GAAO,CACnD,CAEJ,EAEA,EAAsB",
  "names": []
}
